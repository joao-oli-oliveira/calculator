
Your calculator is going to contain functions for all of the basic math operators you typically find on calculators, so start by creating functions for the following items and testing them in your browser’s console:


Numbers
x if opFuntion is empty 
    x store value in setFirstNumber
    display the number

x if opFuntion !is empty 
    x store value in setSecondNumber
        if number is already there, concatenate 
    display the number

Symbols
x when symbol clicked store the matching opFunction
    display the symbol

Equals 
    x if setPreviousResult is empty use setFirstNumber
    otherwise use setPreviousResult
    x Run the function 
    display the result

xxx Decimal



x   Clicking a decimal point after result?    
x  Floating arithmatics (0.1 + 0.7?) 
x  Rounding answers
x  Clear
x  Backspace
x  Finish operator functions
x  Divide by zero
x  Stuff on screen
->  Keyboard support (IGNORE)




Operators: 
    - add
    - subtract
    - multiply
    - divide

Create three variables
    - a number, 
    - an operator, 
    - and another number. 

Create function operate that takes 
    - an operator
    - two numbers and then calls one of the above functions on the numbers.

Create a basic HTML calculator with buttons for 
    - each digit
    - operator (including =).
    - Display for the calculator.
    - Add a “clear” button.

Create the functions that populate the display when you click the digit buttons. 
    - Store the content of the display (the number) in a variable for use in the next step.



Gotchas:
    x Your calculator should not evaluate more than a single pair of numbers at a time. 
    - You should round answers with long decimals so that they don’t overflow the display.
    x Pressing = before entering all of the numbers or an operator could cause problems!
    - Pressing “clear” should wipe out any existing data. Make sure the user is really starting fresh after pressing “clear”.
    - Display a error message if the user tries to divide by 0… and don’t let it crash your calculator!
    x Make sure that your calculator only runs an operation when supplied with two numbers and an operator by the user. 
        Example: you enter a number (2), followed by an operator button (+). You press the operator button (+) a second consecutive time. Your calculator should not evaluate this as (2 + 2) and should not display the result (4). If consecutive operator buttons are pressed, your calculator should not run any evaluations, it should only take the last operator entered to be used for the next operation.

Extra credit
    - Users can get floating point numbers if they do the math required to get one, but they can’t type them in yet. 
        Add a . button and let users input decimals! Make sure you don’t let them type more than one though, like: 12.3.56.5. Disable the . button if there’s already a decimal separator in the display.
    - Add a “backspace” button, so the user can undo their last input if they click the wrong number.
    - Add keyboard support!